<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AI on Vignesh Sundararajan</title>
    <link>https://vigneshsundararajan.github.io/tags/ai/</link>
    <description>Recent content in AI on Vignesh Sundararajan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 30 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://vigneshsundararajan.github.io/tags/ai/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Machine Learning for Wildlife Conservation</title>
      <link>https://vigneshsundararajan.github.io/blog/datamine/</link>
      <pubDate>Tue, 30 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://vigneshsundararajan.github.io/blog/datamine/</guid>
      <description>An unexpected beginning&amp;hellip; I joined this project with the expectation of being a student and wanting to learn more about Data Science. However, one of the two team leads had to drop out with a spot opening up. I wanted to challenge myself by being not only accountable for my own learning, but also the team member&amp;rsquo;s collective growth. Looking back, it&amp;rsquo;s safe to say it was one of the best decisions I made, even though I was wildly unprepared to take on this challenge.</description>
    </item>
    
    <item>
      <title>My Graduate Research in Urban Air Mobility</title>
      <link>https://vigneshsundararajan.github.io/blog/ai-and-robotics/research/</link>
      <pubDate>Fri, 06 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://vigneshsundararajan.github.io/blog/ai-and-robotics/research/</guid>
      <description>Image Credits : NASA The need for secure and autonomous Urban Air Mobility The world as a collective is transitioning to a more autonomous future with the advent of intelligent transportation vehicles running on renewable energy. The UAM concept highlights the use of Urban Air Taxis, that can take off and land vertically from densely populated areas, and as such need to be highly reliable as the UAM market is projected to grow to roughly 28.</description>
    </item>
    
    <item>
      <title>Ball Tracking and Chasing Robot using ROS and Gazebo</title>
      <link>https://vigneshsundararajan.github.io/blog/ai-and-robotics/autsys/</link>
      <pubDate>Fri, 08 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://vigneshsundararajan.github.io/blog/ai-and-robotics/autsys/</guid>
      <description>This project was my first introduction to Perception and learning about the different image processing techniques that I could apply for Object Detection using the minimal computational resources! I explored methods such as Canny Edge Detection, and Image Masking to extract only the object of interest from the RGB camera feed. Once that is done, I calculated the distance to the object by finding it&amp;rsquo;s centroid and position relative to the robot.</description>
    </item>
    
    <item>
      <title>Lane Detection using OpenCV</title>
      <link>https://vigneshsundararajan.github.io/blog/ai-and-robotics/lane-detection/</link>
      <pubDate>Fri, 25 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://vigneshsundararajan.github.io/blog/ai-and-robotics/lane-detection/</guid>
      <description>Lane detection is an important computer vision problem in the context of autonomous driving. In this project, an image is taken as an input and then a Gaussian Blur filter is applied to it. A Sobel Filter was implemented to obtain the grayscale gradient image followed by Canny Edge detection using Non-Max Suppression and Hysteresis Thresholding to extract edges between a specified threshold. Image masking is then used to extract only the edges that are of interest (eg: we don&amp;rsquo;t need the horizon).</description>
    </item>
    
    <item>
      <title>Image Super Resolution using a GAN with a Perceptual Loss Function</title>
      <link>https://vigneshsundararajan.github.io/blog/ai-and-robotics/srgan/</link>
      <pubDate>Thu, 16 Dec 2021 09:12:37 -0500</pubDate>
      
      <guid>https://vigneshsundararajan.github.io/blog/ai-and-robotics/srgan/</guid>
      <description>This was my first ever introduction to Deep Learning and AI in general! I chose to work on this project to get myself acquainted with how SOTA networks can be used on a useful problem statement. I came across Ledig, et al. 2017 and was fascinated by how this could be used in numerous applications, say for potentially upsampling low resolution MRI scans instead of purchasing higher cost equipment. The model network proposed was a version of ResNet with 16 Residual Blocks, utilising skip connections, with high level feature maps being captured by a Perceptual Loss Function trained on the VGG network.</description>
    </item>
    
    <item>
      <title>CNN Autoencoder for Image Denoising</title>
      <link>https://vigneshsundararajan.github.io/blog/ai-and-robotics/cnn/</link>
      <pubDate>Wed, 27 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://vigneshsundararajan.github.io/blog/ai-and-robotics/cnn/</guid>
      <description>Dataset used MNIST: http://yann.lecun.com/exdb/mnist/
Data augmentation was performed on this dataset by adding a Gaussian noise with $\mu = 0$ and $\sigma = 0.5$. Test-train splits were then created by concatenating the clean images along with their noisy counterparts.
Model Architecture and Training The autoencoder model designed for this task has two convolutional layers along with max pooling in the encoder, and two transpose convolutional layers in the decoder. Training was done for 10 epochs to reduce the loss to a sufficient level.</description>
    </item>
    
    <item>
      <title>KNN Classifier to detect potential credit card fraud</title>
      <link>https://vigneshsundararajan.github.io/blog/ai-and-robotics/knn/</link>
      <pubDate>Fri, 24 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://vigneshsundararajan.github.io/blog/ai-and-robotics/knn/</guid>
      <description>Through this project, I was attempting to understand the K-nearest-neighbors classification algorithm and the process of selecting the optimal estimators.
Understanding the dataset The dataset was a CSV file consisting of PCA values for certain transaction information to protect consumer privacy. The Amount feature is the amount of money in that particular transaction and the Class feature contains two classes safe and fraud
Objective The goal was to find the optimal parameters of the KNN estimator using cross validation and then provide a final estimate of the model&amp;rsquo;s generalization performance via the test set.</description>
    </item>
    
  </channel>
</rss>
